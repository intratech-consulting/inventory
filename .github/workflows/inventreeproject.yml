#name: Inventree-Project
#
#on:
#  push:
#    branches:
#      - main
#jobs:
#  ssh:
#    steps:
#      - name: Write ssh keys
#        run: |
#          install -m 600 -D /dev/null ~/.ssh/id_rsa
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.SSH_PRIVATE_KEY }} > ~/.ssh/known_hosts
#      - name: connect and pull
#        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && git checkout main ${{ secrets.MAIN_BRANCH }} && git pull && exit"
#      - name: cleanup
#        run: rm -rf ~/.ssh
#  running-pull:
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
name: Deploy to Server

on:
  push:
    branches:
      - new-main

jobs:
  deploy:
    runs-on: [ self-hosted ]
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write ssh keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Connect and deploy
        run: |
          echo "ssh: host ${{ env.SH_HOST }}"
          echo "ssh: user ${{ env.SSH_USER }}"
          echo "ssh: key ${{ env.SSH_PRIVATE_KEY }}"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ${{ secrets.WORK_DIR }} && 
          git checkout main ${{ secrets.MAIN_BRANCH }} && 
          git pull && 
          # Add checks here (replace with your actual checks)
          if [ $(grep 'SUCCESS' some_status_file.txt) ]; then  # Simulates a check
              docker-compose -d up
          else
              echo 'Checks failed. Deployment skipped.'
          fi && 
          exit"
      - name: Cleanup
        run: rm -rf ~/.ssh
