name: Deploy to Staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: self-hosted
#    environment: staging
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      WORK_DIR: ${{ secrets.WORK_DIR }}
      SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts
          sudo apt-get install sshpass

      - name: Connect to Staging Server and Deploy
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -v -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'ENDSSH'
          cd ${{ env.WORK_DIR }}
          pwd
          ls -la  # Check the directory content
          if [ -d ".git" ]; then
              echo "Git directory exists, proceeding with Git operations..."
              git checkout staging
              git fetch --all
              git reset --hard origin staging
          else
              echo "Not a Git repository. Exiting."
              exit 1
          fi
          echo "Restarting services..."
          cd Inventree
          ENDSSH
      

      - name: Cleanup
        run: rm -rf ~/.ssh
